---
import "bootstrap/dist/css/bootstrap.css";
import { HISTORICAL_DATASETS } from "../components/openapi";

const menuItems = [
  { href: "/", label: "Home" },
  { href: "/datasets/", label: "Datasets" },
  {
    href: "/tawes-v1-10min/stations/",
    label: "Stationen",
    childs: HISTORICAL_DATASETS.map((dataset) => ({
      href: `/${dataset}/stations`,
      label: dataset,
    })),
  },
  {
    href: "/tawes-v1-10min/station/",
    label: "Stationsdaten",
    childs: HISTORICAL_DATASETS.map((dataset) => ({
      href: `/${dataset}/station`,
      label: dataset,
    })),
  },
  {
    href: "/tawes-v1-10min/parameters/",
    label: "Parameter",
    childs: HISTORICAL_DATASETS.map((dataset) => ({
      href: `/${dataset}/parameters`,
      label: dataset,
    })),
  },
];

function isActive(href: string): boolean {
  return href === "/"
    ? Astro.url.pathname === "/"
    : Astro.url.pathname.startsWith(href);
}
---

<html lang="de">
  <head>
    <meta charset="utf-8" />
    <title>ðŸŒˆ ZAMG Data Hub Explorer</title>
    <meta name="author" content="Simon Legner" />
    <meta
      name="description"
      content="Ein visuelles Entdeckungswerkzeug fÃ¼r den ZAMG Data Hub."
    />
    <meta name="keywords" content="opendata,meteorological-data,zamg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
  </head>
  <body>
    <nav
      class="navbar navbar-expand navbar-dark shadow-sm mb-5 d-print-none"
      style="background-color: #702065;"
    >
      <div class="container">
        <a class="navbar-brand" href="/">ðŸŒˆ ZAMG Data Hub Explorer</a>
        <div class="collapse navbar-collapse" id="navbarNav">
          <ul class="navbar-nav">
            {
              menuItems.map(({ href, label, childs }) => (
                <li class:list={[{ dropdown: childs?.length }]}>
                  <a
                    href={href}
                    data-bs-toggle={childs?.length ? "dropdown" : undefined}
                    class:list={[
                      "nav-link",
                      {
                        active:
                          isActive(href) ||
                          childs?.some(({ href }) => isActive(href)),
                        "dropdown-toggle": childs?.length,
                      },
                    ]}
                  >
                    {label}
                  </a>
                  {childs?.length && (
                    <ul class="dropdown-menu">
                      {childs.map(({ href, label }) => (
                        <li>
                          <a
                            class:list={[
                              "dropdown-item",
                              {
                                active: isActive(href),
                              },
                            ]}
                            href={href}
                          >
                            {label}
                          </a>
                        </li>
                      ))}
                    </ul>
                  )}
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </nav>
    <script>
      import "bootstrap";
    </script>
    <div class="container">
      <slot />
    </div>
  </body>
</html>
